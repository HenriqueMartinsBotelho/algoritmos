vertices
1 0 0 0
2 0 1 0
3 0 0 1

edges
1 1 2
2 2 3
3 3 1

faces
1 1 2 3

read
replace_load "st.fe";
background:=WHITE;
define v1 real[2];
define v2 real[2];
im:=max(vertices,id);
ct:=0;dt:=0;cd:=1;

function integer fid(integer fn,integer sn,integer tn){
 if (fn=sn) then return tn else return sn;};

teste:={for (fnx:=1;fnx<=valence-1;fnx++)
    for (snx:=fnx+1;snx<=valence;snx++){
     v1[1]:=vv.edge[fnx].x;v1[2]:=vv.edge[fnx].y;
     v2[1]:=vv.edge[snx].x;v2[2]:=vv.edge[snx].y;
     ca:=(v1[1]*v2[1]+v1[2]*v2[2])/sqrt(v1[1]^2+v1[2]^2)/sqrt(v2[1]^2+v2[2]^2);
    if ca>mc then{mc:=ca;ff:=fnx;sf:=snx;};};};

sc:={
 foreach vertex vv where valence>1 do{
  mc:=-1/2;ff:=1;sf:=2;
  if dt then cd:=(vv.id<=im)&&(max(vv.edges,color)<2);
  if cd then{
   for (fnx:=1;fnx<=valence-1;fnx++)
    for (snx:=fnx+1;snx<=valence;snx++){
     v1[1]:=vv.edge[fnx].x;v1[2]:=vv.edge[fnx].y;
     v2[1]:=vv.edge[snx].x;v2[2]:=vv.edge[snx].y;
     ca:=(v1[1]*v2[1]+v1[2]*v2[2])/sqrt(v1[1]^2+v1[2]^2)/sqrt(v2[1]^2+v2[2]^2);
    if ca>mc then{mc:=ca;ff:=fnx;sf:=snx;};};};
  if !dt then{
   ce:=vv.edge[ff].length;be:=vv.edge[sf].length;ae:=sqrt(be^2+ce^2-2*mc*be*ce);
   if (ce^2>=ae^2+be^2+ae*be)||(be^2>=ae^2+ce^2+ae*ce) then{
    if ce>be then{vv.edge[ff].color:=RED;vv.edge[sf].color:=MAGENTA;}
    else{vv.edge[ff].color:=MAGENTA;vv.edge[sf].color:=RED;};
    id1:=fid(vv.id,vv.edge[ff].vertex[1].id,vv.edge[ff].vertex[2].id);
    id2:=fid(vv.id,vv.edge[sf].vertex[1].id,vv.edge[sf].vertex[2].id);
    ne:=new_edge(id1,id2);
    edge[ne].color:=BLUE;
    dissolve edges where color=RED;
    ct:=ct+1;};}
  else{
   if mc>-1/2 then{
    vv.edge[ff].density:=0;vv.edge[ff].color:=YELLOW;
    vv.edge[sf].density:=0;vv.edge[sf].color:=YELLOW;
    id1:=fid(vv.id,vv.edge[ff].vertex[1].id,vv.edge[ff].vertex[2].id);
    id2:=fid(vv.id,vv.edge[sf].vertex[1].id,vv.edge[sf].vertex[2].id);
    v1:=(vertex[id1].__x+vertex[id2].__x-2*vv.__x)/10;
    nv:=new_vertex(vv.x+v1[1],vv.y+v1[2]);
    ne:=new_edge(nv,vv.id);edge[ne].color:=BLUE;
    ne:=new_edge(nv,id1);edge[ne].color:=BLUE;
    ne:=new_edge(nv,id2);edge[ne].color:=BLUE;
    ct:=ct+1;};};};
 set edges density 1;
 g 10;};

do{ct:=0;sc;} while ct>0;
set edges color BLACK;
dt:=1;
do{ct:=0;sc;dissolve edges where color=YELLOW;} while ct>0;

show
